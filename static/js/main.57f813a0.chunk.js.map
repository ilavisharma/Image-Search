{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","_this","props","onSubmit","_this2","this","react_default","a","createElement","className","type","value","onChange","e","setState","target","React","Component","ImageCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","_this$props$image","image","description","urls","style","gridRowEnd","concat","ref","alt","src","regular","ImageList","images","map","components_ImageCard","key","id","App","onSearchSubmit","_callee","response","regenerator_default","wrap","_context","prev","next","unsplash","get","params","query","sent","data","results","stop","marginTop","components_SearchBar","src_components_ImageList","ReactDOM","render","components_App","document","querySelector"],"mappings":"iQAEeA,WAAMC,OAAO,CACxBC,QAAS,2BACTC,QAAS,CACLC,cAAe,gFCuBRC,6MAzBXC,MAAQ,CAAEC,KAAM,MAEhBC,aAAe,SAACC,GACZA,EAAMC,iBAENC,EAAKC,MAAMC,SAASF,EAAKL,MAAMC,+EAG1B,IAAAO,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,QAAML,SAAUE,KAAKP,aAAcW,UAAU,WACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,SAAOE,KAAK,OACRC,MAAON,KAAKT,MAAMC,KAClBe,SAAU,SAAAC,GAAC,OAAIT,EAAKU,SAAS,CAACjB,KAAMgB,EAAEE,OAAOJ,qBAjBjDK,IAAMC,WC8BfC,qBA7BX,SAAAA,EAAYhB,GAAO,IAAAD,EAAA,OAAAkB,OAAAC,EAAA,EAAAD,CAAAd,KAAAa,IACfjB,EAAAkB,OAAAE,EAAA,EAAAF,CAAAd,KAAAc,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlB,KAAMH,KASVsB,SAAW,WACP,IAAMC,EAASxB,EAAKyB,SAASC,QAAQC,aAC/BC,EAAQC,KAAKC,KAAKN,EAAS,IAEjCxB,EAAKa,SAAS,CAAEe,MAAOA,KAZvB5B,EAAKL,MAAQ,CAAEiC,MAAO,GACtB5B,EAAKyB,SAAWV,IAAMgB,YAHP/B,mFAOfI,KAAKqB,SAASC,QAAQM,iBAAiB,OAAQ5B,KAAKmB,2CAU/C,IAAAU,EACyB7B,KAAKH,MAAMiC,MAAjCC,EADHF,EACGE,YAAaC,EADhBH,EACgBG,KAErB,OACI/B,EAAAC,EAAAC,cAAA,OAAK8B,MAAQ,CAACC,WAAU,QAAAC,OAAUnC,KAAKT,MAAMiC,SACzCvB,EAAAC,EAAAC,cAAA,OACIiC,IAAKpC,KAAKqB,SAAUgB,IAAKN,EAAaO,IAAKN,EAAKO,kBAxB5C5B,IAAMC,YCYf4B,EAVG,SAAC3C,GACf,IAAM4C,EAAS5C,EAAM4C,OAAOC,IAAI,SAACZ,GAC7B,OAAO7B,EAAAC,EAAAC,cAACwC,EAAD,CAAWC,IAAKd,EAAMe,GAAIf,MAAOA,MAE5C,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcqC,ICgBtBK,6MAnBXvD,MAAQ,CAAEkD,OAAQ,MAElBM,qDAAiB,SAAAC,EAAMxD,GAAN,IAAAyD,EAAA,OAAAC,EAAAhD,EAAAiD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACUC,EAASC,IAAI,iBAAkB,CAClDC,OAAQ,CAAEC,MAAOlE,KAFR,OACPyD,EADOG,EAAAO,KAIb/D,EAAKa,SAAS,CAAEgC,OAAQQ,EAASW,KAAKC,UAJzB,wBAAAT,EAAAU,SAAAd,EAAAhD,uIAQb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe6B,MAAO,CAAC8B,UAAW,SAC7C9D,EAAAC,EAAAC,cAAC6D,EAAD,CAAWlE,SAAUE,KAAK+C,iBAC1B9C,EAAAC,EAAAC,cAAC8D,EAAD,CAAWxB,OAAQzC,KAAKT,MAAMkD,iBAd5B9B,IAAMC,WCDxBsD,IAASC,OACLlE,EAAAC,EAAAC,cAACiE,EAAD,MACAC,SAASC,cAAc","file":"static/js/main.57f813a0.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://api.unsplash.com',\n    headers: {\n        Authorization: 'Client-ID a6cc23b294fb8f69a481577134a4080c40bb3159bc847e9661ffdc9ff8eb402a'\n    }\n});\n","import React from 'react';\n\nclass SearchBar extends React.Component {\n    state = { term: '' }\n\n    onFormSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.onSubmit(this.state.term);\n    }\n\n    render() {\n        return (\n            <div className=\"ui segment\">\n                <form onSubmit={this.onFormSubmit} className=\"ui form\">\n                    <div className=\"field\">\n                        <label>Image Search</label>\n                        <input type=\"text\"\n                            value={this.state.term}\n                            onChange={e => this.setState({term: e.target.value})}\n                            />\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass ImageCard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { spans: 0 };\n        this.imageRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.imageRef.current.addEventListener('load', this.setSpans);\n    }\n\n    setSpans = () => {\n        const height = this.imageRef.current.clientHeight;\n        const spans = Math.ceil(height / 10);\n\n        this.setState({ spans: spans });\n    }\n\n    render() {\n        const { description, urls } = this.props.image;\n\n        return (\n            <div style= {{gridRowEnd: `span ${this.state.spans}`}}>\n                <img \n                    ref={this.imageRef} alt={description} src={urls.regular} />\n            </div>\n        );\n    }\n}\n\nexport default ImageCard;\n","import './ImageList.css';\nimport React from 'react';\nimport ImageCard from './ImageCard';\n\nconst ImageList = (props) => {\n    const images = props.images.map((image) => {\n        return <ImageCard key={image.id} image={image} />;\n    });\n    return (\n        <div className=\"image-list\">{images}</div>\n    );\n\n};\n\nexport default ImageList;\n","import React from 'react';\nimport unsplash from '../api/unsplash';\nimport SearchBar from './SearchBar';\nimport ImageList from './ImageList';\n\nclass App extends React.Component {\n    state = { images: [] };\n\n    onSearchSubmit = async(term) => {\n        const response = await unsplash.get('/search/photos', {\n            params: { query: term },\n        });\n        this.setState({ images: response.data.results });\n    }\n\n    render() {\n        return (\n            <div className=\"ui container\" style={{marginTop: '10px'}}>\n                <SearchBar onSubmit={this.onSearchSubmit} />\n                <ImageList images={this.state.images} />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}